@model PaginatedList<ert_beer_app.Models.BeerModel>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
    <link href="~/fontawesome/css/all.css" rel="stylesheet" />
</head>

<h1 class="clr wdt">Brew Dog Beers</h1>
<br />
@{
    var fields = (Model ?? Enumerable.Empty<BeerModel>()).ToList();
}


@using (Html.BeginForm("Beer", "Beer"))
{
    <div>
        @Html.Label("Beer Name")
        @Html.TextBox("searchBeersByName", null, new { @class = "form-control valid", @data_val = "true", @data_val_required = "Beer Name is required" })
        <input type="submit" id="SearchBeersByName" value="Search By Name" class="clr" />
    </div>
}

@using (Html.BeginForm(actionName: "AddtoFavorites", controllerName: "Beer", method: FormMethod.Post))
{
    <div class="form-group">
        <table class="table" border="1" width="80%">
            <thead>
                <tr class="clr" style="grid-row">
                    <th class="">Check</th>
                    <th class="">ID</th>
                    <th class="">Beer Name</th>
                    <th class="">TagLine</th>
                    <th class="">First_Brewed</th>
                    <th class="">Abv</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @for (var i = 0; i < fields.Count; i++)
                {
                    <tr>
                        <td class="selected">
                            @Html.CheckBoxFor(modelItem => @fields[i].checkboxAnswer)
                        </td>
                        <td class="selected">
                            @Html.DisplayFor(modelItem => @fields[i].Id)
                        </td>
                        <td class="selected">
                            @Html.DisplayFor(modelItem => @fields[i].Name)
                        </td>
                        <td class="selected">
                            @Html.DisplayFor(modelItem => @fields[i].TagLine)
                        </td>
                        <td class="selected">
                            @Html.DisplayFor(modelItem => @fields[i].First_Brewed)
                        </td>
                        <td class="selected">
                            @Html.DisplayFor(modelItem => @fields[i].Abv)
                        </td>
                        <td>
                            @Html.ActionLink("Details", "Details", @fields[i])
                        </td>
                    </tr>
                }

            </tbody>
        </table>
        <br />
        <div>
            @{
                var prevDisabled = !Model.PreviousPage ? "disabled" : "";
                var NextvDisabled = !Model.NextPage ? "disabled" : "";
            }
            <a asp-action="Beer"
               asp-route-pageNumber="@(Model.PageIndex - 1)"
               class="btn btn-default @prevDisabled">
                Previous
            </a>
            <a asp-action="Beer"
               asp-route-pageNumber="@(Model.PageIndex + 1)"
               class="btn btn-default @NextvDisabled">
                Next
            </a>
        </div>
        <br />

        @Html.Label("Email Id")
        @Html.TextBox("email")
        <button type="submit" name="submit" value="AddtoFavorites" class="clr">Add to Favorites</button>
    </div>
}
<br />
@using (Html.BeginForm(controllerName: "Beer", actionName: "SearchFavoriteBeersByEmail"))
{
    <div>
        @Html.TextBox("searchFavorites")
        <input type="submit" id="submit" value="Search Favorite Beers" class="clr" />
    </div>
}

<style type="text/css">
    .clr {
        background-color: cadetblue;
        color: white;
        text-align:center;
              
    }
    .wdt {
        width: 80%;
    }

    .selected {
        background-color: #004b89;
        color: white;
        font-weight: bold;        
    }


    td,
    th {
        border: 1px solid rgb(190, 190, 190);
        padding: 10px;
    }

    td {
        text-align: center;
    }

    tr:nth-child(even) {
        background-color: #eee;
    }

    th[scope="col"] {
        background-color: #696969;
        color: #fff;
    }

    th[scope="row"] {
        background-color: #d7d9f2;
    }

    caption {
        padding: 10px;
        caption-side: bottom;
    }

    table {
        border-collapse: collapse;
        border: 2px solid rgb(200, 200, 200);
        letter-spacing: 1px;
        font-family: sans-serif;
        font-size: .8rem;
    }


</style>
@section Scripts
    {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}